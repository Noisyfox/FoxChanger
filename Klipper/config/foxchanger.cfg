[gcode_macro _FoxChanger_Variables]
description: Variables for FoxChanger

variable_normal_speed: 300    # in mm/s
variable_approach_speed: 10   # in mm/s

variable_latch_travel: 10            # in mm
variable_latch_pin_safe_y_offset: 15 # in mm
variable_tool_safe_y_offset: 100      # in mm
variable_tool_plug_offset: 12        # in mm
variable_carriage_safe_y_offset: 25  # in mm
variable_tool_safe_z: 160      # in mm, below this z the toolhead has no chance to collide with the dock. Set to 0 for trident

# Do not modify below
gcode:


[toolchanger]
  initialize_on: first-use
  uses_axis: xyz
  on_axis_not_homed: home
  initialize_gcode:
    INITIALIZE_TOOLCHANGER T=0

  after_change_gcode:
    {% set tn = "T"+(tool.tool_number|string) %}
    {% if printer["gcode_macro " + tn ] %}
       SET_GCODE_VARIABLE MACRO={tn} VARIABLE=color VALUE="'c44'"
    {% endif %}
    {% if tool.params_input_shaper_freq_x %}
      SET_INPUT_SHAPER SHAPER_FREQ_X={tool.params_input_shaper_freq_x} SHAPER_FREQ_Y={tool.params_input_shaper_freq_y}
    {% endif %}

  dropoff_gcode:
    {% set fc_variables = printer["gcode_macro _FoxChanger_Variables"] %}
    {% set normal_speed = fc_variables.normal_speed * 60 | float %} 
    {% set approach_speed = fc_variables.approach_speed * 60 | float %} 
    {% set latch_travel = fc_variables.latch_travel | float %} 
    {% set latch_pin_safe_y_offset = fc_variables.latch_pin_safe_y_offset | float %} 
    {% set tool_safe_y_offset = fc_variables.tool_safe_y_offset | float %} 
    {% set tool_plug_offset = fc_variables.tool_plug_offset | float %} 
    {% set carriage_safe_y_offset = fc_variables.carriage_safe_y_offset | float %} 
    
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
    {% set cur_z = printer.toolhead.position[2]|float %}
    
    {% set x_docked = tool.params_park_x | float %} 
    {% set y_docked = tool.params_park_y | float %} 
    {% set z_docked = tool.params_park_z | float %} 

    G90
    
    G0 F{normal_speed}
    
    ; Move 1 mm up to avoid crashing into things
    G0 Z{ [cur_z+1.0, max_z]|min }
    
    G0 X{x_docked + latch_travel} Y{y_docked + tool_safe_y_offset}  # align the toolhead in x axis, while avoid collision
    G0 Z{z_docked}                                                  # align in z axis
    G0 Y{y_docked + latch_pin_safe_y_offset}                        # move towards docking position stage 1, fast

    G0 Y{y_docked} F{approach_speed}                                # move towards final docking position, slow
    G0 X{x_docked}                                                  # release the latch
    G0 X{x_docked - 1}                                              # go back a little bit to make clearance between the pin and the latch hole
    G0 Y{y_docked + tool_plug_offset}                               # release the toolhead

    G0 F{normal_speed}
    
    G0 Y{y_docked + carriage_safe_y_offset}                         # move the carriage away
  
  pickup_gcode:
    {% set fc_variables = printer["gcode_macro _FoxChanger_Variables"] %}
    {% set normal_speed = fc_variables.normal_speed * 60 | float %} 
    {% set approach_speed = fc_variables.approach_speed * 60 | float %} 
    {% set latch_travel = fc_variables.latch_travel | float %} 
    {% set latch_pin_safe_y_offset = fc_variables.latch_pin_safe_y_offset | float %} 
    {% set tool_safe_y_offset = fc_variables.tool_safe_y_offset | float %} 
    {% set tool_plug_offset = fc_variables.tool_plug_offset | float %} 
    {% set carriage_safe_y_offset = fc_variables.carriage_safe_y_offset | float %} 
    {% set tool_safe_z = fc_variables.tool_safe_z | float %} 
    
    {% set x_docked = tool.params_park_x | float %} 
    {% set y_docked = tool.params_park_y | float %} 
    {% set z_docked = tool.params_park_z | float %} 

    G90
    
    G0 F{normal_speed}
    G0 X{x_docked} Y{y_docked + carriage_safe_y_offset}  # align the toolhead in x axis, while avoid collision
    G0 Z{z_docked - 0.3}                                 # align in z axis, while account for the z drop when docked

    # Wait for temp before actually picking up the tool, while the nozzle is resting on it's pad.
    {% if tool.extruder %}
      TEMPERATURE_WAIT SENSOR={printer.toolhead.extruder} MINIMUM={printer[tool.extruder].target}
    {% endif %}

    G0 Y{y_docked - 0.5} F{approach_speed}               # move towards toolhead
    G0 X{x_docked + latch_travel + 1}                    # close the latch
    G0 X{x_docked + latch_travel}                        # go back a little bit to make clearance between the pin and the latch hole
    
    G0 F{normal_speed}
    
    G0 Y{y_docked + tool_safe_y_offset}                  # move the toolhead away
    
    # Avoid collision
    {% if 'Y' in restore_position %}
      {% if restore_position.Y < y_docked + tool_safe_y_offset %}
        # Potentially dangerous movement, the tools might collide
        {% if 'Z' in restore_position %}
          {% if restore_position.Z > tool_safe_z %}
            { action_raise_error("Unable to safely restore the position! Toolhead could crash!") }
          {% endif %}
        {% else %}
          { action_raise_error("Unable to safely restore the position! Toolhead could crash!") }
        {% endif %}

        # Move the toolhead down first
        G0 Z{tool_safe_z} F{normal_speed}
      {% endif %}
    {% endif %}
    
    # Restore the position with smooth rounded move.
    {% if 'X' in restore_position %}
      ROUNDED_G0 X={restore_position.X} F={normal_speed} D=1000
    {% endif %}
    {% if 'Y' in restore_position %}
      ROUNDED_G0 Y={restore_position.Y} F={normal_speed} D=0
    {% endif %}
    {% if 'Z' in restore_position %}
      ROUNDED_G0 Z={restore_position.Z} F={normal_speed} D=150
    {% endif %}
    ROUNDED_G0 D=0

[gcode_macro M104]
rename_existing: M104.1
description: [T<index>] [S<temperature>]
  Set tool temperature.
  T= Tool number, optional. If this parameter is not provided, the current tool is used.
  S= Target temperature
gcode:
  {% if params.T is defined %}
    {% set newparameters = " T="~params.T %}
    {% if params.S is defined %}
      {% set newparameters = newparameters ~ " TARGET="~params.S %}
    {% endif %}
    SET_TOOL_TEMPERATURE{newparameters}
  {% else %}
    M104.1 {rawparams}
  {% endif %}


[gcode_macro M109]
rename_existing: M109.1
description: [T<index>] [S<temperature>]
  Set tool temperature and wait.
  T= Tool number, optional. If this parameter is not provided, the current tool is used.
  S= Target temperature
gcode:
  {% if params.T is defined %}
    {% set newparameters = " T="~params.T %}
    {% if params.S is defined %}
      {% set newparameters = newparameters ~ " TARGET="~params.S %}
    {% endif %}
    SET_TOOL_TEMPERATURE WAIT=1 {newparameters}
  {% else %}
    M109.1 {rawparams}
  {% endif %}

[tools_calibrate]
pin: ^PC15
travel_speed: 20  # mms to travel sideways for XY probing
spread: 7  # mms to travel down from top for XY probing
lower_z: 1.0  # The speed (in mm/sec) to move tools down onto the probe
speed: 2  # The speed (in mm/sec) to retract between probes
lift_speed: 4  # Z Lift after probing done, should be greater than any Z variance between tools
final_lift_z: 6 
sample_retract_dist:2
samples_tolerance:0.05
samples:5
samples_result: median # median, average

# Settings for nozzle probe calibration - optional.
# probe: probe # name of the nozzle probe to use

trigger_to_bottom_z: 0.2 # Offset from probe trigger to vertical motion bottoms out. 
# decrease if the nozzle is too high, increase if too low.
